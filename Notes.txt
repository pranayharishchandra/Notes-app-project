=================================================================================
const sortedTasks = tasks.sort((a, b) => b.priority - a.priority);

=================================================================================
<div className={"h-screen " + (dark && 'bg-blue-950')}> // parenthesis

=================================================================================
// not working
const [text, setText] = useState(idEdit ? idEdit : '');

---------------------------------------------------------------------------------
// working
  const [text, setText] = useState('');

  useEffect(() => {
    setText(idEdit)
  },[idEdit])

=================================================================================
// not sorting in decending order in 1st render
  const [tasks, setTasks] = useState(sortedTasks)

  useEffect(() => {
    const sortedTasks = tasks.sort((a, b) => b.priority - a.priority);
    setTasks(sortedTasks)
  },[tasks])

---------------------------------------------------------------------------------
// working
  const sortedTasks = tasks_.sort((a, b) => b.priority - a.priority)
  const [tasks, setTasks] = useState(sortedTasks)

  useEffect(() => {
    const sortedTasks = tasks.sort((a, b) => b.priority - a.priority);
    setTasks(sortedTasks)
  },[tasks])

=================================================================================
// i guess when you have stored all the items on your machine, and not fetching
// then useEffect is not working as expected
// and for me i just 'sortedTasks' before 'setTasks'

=================================================================================
TaskProvider only to enclose the App.js child compnents
TaskContext to create and export default and useContext(TaskContext)
=================================================================================
  //  DON'T MAKE "useState" UNNECESSARY
  following is wokring
  // const [expand, setExpand] = useState(false)

  const expand = id === readMore

  function expandHandler() {
    setReadMore(expand ? null : id)
    // setExpand(readMore === id ? true : false)
  }
--------------------------------------------------------------------------------
  // following is not -- sometimes -- i have to click 3 times on + button to make is expand and once it expands it's wokring fine, may be it's becuase react state management,
  // CONCLUSION : USE "useState" ONLY WHEN NECESSARY
    const [expand, setExpand] = useState(readMore === id)

  // const expand = id === readMore

  function expandHandler() {
    setReadMore(readMore ? null : id)
    setExpand(readMore === id)
  }
=================================================================================








